//
// File generated by rootcint at Sat Jan 20 13:09:22 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME AngularDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AngularDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void AngularRT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AngularRT(void *p = 0);
   static void *newArray_AngularRT(Long_t size, void *p);
   static void delete_AngularRT(void *p);
   static void deleteArray_AngularRT(void *p);
   static void destruct_AngularRT(void *p);
   static void streamer_AngularRT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AngularRT*)
   {
      ::AngularRT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AngularRT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AngularRT", ::AngularRT::Class_Version(), "./../interface/AngularRT.h", 16,
                  typeid(::AngularRT), DefineBehavior(ptr, ptr),
                  &::AngularRT::Dictionary, isa_proxy, 0,
                  sizeof(::AngularRT) );
      instance.SetNew(&new_AngularRT);
      instance.SetNewArray(&newArray_AngularRT);
      instance.SetDelete(&delete_AngularRT);
      instance.SetDeleteArray(&deleteArray_AngularRT);
      instance.SetDestructor(&destruct_AngularRT);
      instance.SetStreamerFunc(&streamer_AngularRT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AngularRT*)
   {
      return GenerateInitInstanceLocal((::AngularRT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AngularRT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AngularWT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AngularWT(void *p = 0);
   static void *newArray_AngularWT(Long_t size, void *p);
   static void delete_AngularWT(void *p);
   static void deleteArray_AngularWT(void *p);
   static void destruct_AngularWT(void *p);
   static void streamer_AngularWT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AngularWT*)
   {
      ::AngularWT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AngularWT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AngularWT", ::AngularWT::Class_Version(), "./../interface/AngularWT.h", 16,
                  typeid(::AngularWT), DefineBehavior(ptr, ptr),
                  &::AngularWT::Dictionary, isa_proxy, 0,
                  sizeof(::AngularWT) );
      instance.SetNew(&new_AngularWT);
      instance.SetNewArray(&newArray_AngularWT);
      instance.SetDelete(&delete_AngularWT);
      instance.SetDeleteArray(&deleteArray_AngularWT);
      instance.SetDestructor(&destruct_AngularWT);
      instance.SetStreamerFunc(&streamer_AngularWT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AngularWT*)
   {
      return GenerateInitInstanceLocal((::AngularWT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AngularWT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AngularRT_noS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AngularRT_noS(void *p = 0);
   static void *newArray_AngularRT_noS(Long_t size, void *p);
   static void delete_AngularRT_noS(void *p);
   static void deleteArray_AngularRT_noS(void *p);
   static void destruct_AngularRT_noS(void *p);
   static void streamer_AngularRT_noS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AngularRT_noS*)
   {
      ::AngularRT_noS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AngularRT_noS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AngularRT_noS", ::AngularRT_noS::Class_Version(), "./../interface/AngularRT_noS.h", 16,
                  typeid(::AngularRT_noS), DefineBehavior(ptr, ptr),
                  &::AngularRT_noS::Dictionary, isa_proxy, 0,
                  sizeof(::AngularRT_noS) );
      instance.SetNew(&new_AngularRT_noS);
      instance.SetNewArray(&newArray_AngularRT_noS);
      instance.SetDelete(&delete_AngularRT_noS);
      instance.SetDeleteArray(&deleteArray_AngularRT_noS);
      instance.SetDestructor(&destruct_AngularRT_noS);
      instance.SetStreamerFunc(&streamer_AngularRT_noS);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AngularRT_noS*)
   {
      return GenerateInitInstanceLocal((::AngularRT_noS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AngularRT_noS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AngularWT_noS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AngularWT_noS(void *p = 0);
   static void *newArray_AngularWT_noS(Long_t size, void *p);
   static void delete_AngularWT_noS(void *p);
   static void deleteArray_AngularWT_noS(void *p);
   static void destruct_AngularWT_noS(void *p);
   static void streamer_AngularWT_noS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AngularWT_noS*)
   {
      ::AngularWT_noS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AngularWT_noS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AngularWT_noS", ::AngularWT_noS::Class_Version(), "./../interface/AngularWT_noS.h", 16,
                  typeid(::AngularWT_noS), DefineBehavior(ptr, ptr),
                  &::AngularWT_noS::Dictionary, isa_proxy, 0,
                  sizeof(::AngularWT_noS) );
      instance.SetNew(&new_AngularWT_noS);
      instance.SetNewArray(&newArray_AngularWT_noS);
      instance.SetDelete(&delete_AngularWT_noS);
      instance.SetDeleteArray(&deleteArray_AngularWT_noS);
      instance.SetDestructor(&destruct_AngularWT_noS);
      instance.SetStreamerFunc(&streamer_AngularWT_noS);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AngularWT_noS*)
   {
      return GenerateInitInstanceLocal((::AngularWT_noS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AngularWT_noS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *AngularRT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AngularRT::Class_Name()
{
   return "AngularRT";
}

//______________________________________________________________________________
const char *AngularRT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularRT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AngularRT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularRT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AngularRT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularRT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AngularRT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularRT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AngularWT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AngularWT::Class_Name()
{
   return "AngularWT";
}

//______________________________________________________________________________
const char *AngularWT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularWT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AngularWT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularWT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AngularWT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularWT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AngularWT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularWT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AngularRT_noS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AngularRT_noS::Class_Name()
{
   return "AngularRT_noS";
}

//______________________________________________________________________________
const char *AngularRT_noS::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularRT_noS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AngularRT_noS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularRT_noS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AngularRT_noS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularRT_noS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AngularRT_noS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularRT_noS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AngularWT_noS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AngularWT_noS::Class_Name()
{
   return "AngularWT_noS";
}

//______________________________________________________________________________
const char *AngularWT_noS::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularWT_noS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AngularWT_noS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AngularWT_noS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AngularWT_noS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularWT_noS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AngularWT_noS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AngularWT_noS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void AngularRT::Streamer(TBuffer &R__b)
{
   // Stream an object of class AngularRT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FsS.Streamer(R__b);
      AsS.Streamer(R__b);
      As5S.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AngularRT::IsA());
   } else {
      R__c = R__b.WriteVersion(AngularRT::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FsS.Streamer(R__b);
      AsS.Streamer(R__b);
      As5S.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AngularRT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AngularRT.
      TClass *R__cl = ::AngularRT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctK", &ctK);
      R__insp.InspectMember(ctK, "ctK.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctL", &ctL);
      R__insp.InspectMember(ctL, "ctL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FsS", &FsS);
      R__insp.InspectMember(FsS, "FsS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AsS", &AsS);
      R__insp.InspectMember(AsS, "AsS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "As5S", &As5S);
      R__insp.InspectMember(As5S, "As5S.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FlS", &FlS);
      R__insp.InspectMember(FlS, "FlS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P1S", &P1S);
      R__insp.InspectMember(P1S, "P1S.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P5pS", &P5pS);
      R__insp.InspectMember(P5pS, "P5pS.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AngularRT(void *p) {
      return  p ? new(p) ::AngularRT : new ::AngularRT;
   }
   static void *newArray_AngularRT(Long_t nElements, void *p) {
      return p ? new(p) ::AngularRT[nElements] : new ::AngularRT[nElements];
   }
   // Wrapper around operator delete
   static void delete_AngularRT(void *p) {
      delete ((::AngularRT*)p);
   }
   static void deleteArray_AngularRT(void *p) {
      delete [] ((::AngularRT*)p);
   }
   static void destruct_AngularRT(void *p) {
      typedef ::AngularRT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AngularRT(TBuffer &buf, void *obj) {
      ((::AngularRT*)obj)->::AngularRT::Streamer(buf);
   }
} // end of namespace ROOT for class ::AngularRT

//______________________________________________________________________________
void AngularWT::Streamer(TBuffer &R__b)
{
   // Stream an object of class AngularWT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FsS.Streamer(R__b);
      AsS.Streamer(R__b);
      As5S.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AngularWT::IsA());
   } else {
      R__c = R__b.WriteVersion(AngularWT::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FsS.Streamer(R__b);
      AsS.Streamer(R__b);
      As5S.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AngularWT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AngularWT.
      TClass *R__cl = ::AngularWT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctK", &ctK);
      R__insp.InspectMember(ctK, "ctK.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctL", &ctL);
      R__insp.InspectMember(ctL, "ctL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FsS", &FsS);
      R__insp.InspectMember(FsS, "FsS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AsS", &AsS);
      R__insp.InspectMember(AsS, "AsS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "As5S", &As5S);
      R__insp.InspectMember(As5S, "As5S.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FlS", &FlS);
      R__insp.InspectMember(FlS, "FlS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P1S", &P1S);
      R__insp.InspectMember(P1S, "P1S.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P5pS", &P5pS);
      R__insp.InspectMember(P5pS, "P5pS.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AngularWT(void *p) {
      return  p ? new(p) ::AngularWT : new ::AngularWT;
   }
   static void *newArray_AngularWT(Long_t nElements, void *p) {
      return p ? new(p) ::AngularWT[nElements] : new ::AngularWT[nElements];
   }
   // Wrapper around operator delete
   static void delete_AngularWT(void *p) {
      delete ((::AngularWT*)p);
   }
   static void deleteArray_AngularWT(void *p) {
      delete [] ((::AngularWT*)p);
   }
   static void destruct_AngularWT(void *p) {
      typedef ::AngularWT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AngularWT(TBuffer &buf, void *obj) {
      ((::AngularWT*)obj)->::AngularWT::Streamer(buf);
   }
} // end of namespace ROOT for class ::AngularWT

//______________________________________________________________________________
void AngularRT_noS::Streamer(TBuffer &R__b)
{
   // Stream an object of class AngularRT_noS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AngularRT_noS::IsA());
   } else {
      R__c = R__b.WriteVersion(AngularRT_noS::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AngularRT_noS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AngularRT_noS.
      TClass *R__cl = ::AngularRT_noS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctK", &ctK);
      R__insp.InspectMember(ctK, "ctK.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctL", &ctL);
      R__insp.InspectMember(ctL, "ctL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FlS", &FlS);
      R__insp.InspectMember(FlS, "FlS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P1S", &P1S);
      R__insp.InspectMember(P1S, "P1S.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P5pS", &P5pS);
      R__insp.InspectMember(P5pS, "P5pS.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AngularRT_noS(void *p) {
      return  p ? new(p) ::AngularRT_noS : new ::AngularRT_noS;
   }
   static void *newArray_AngularRT_noS(Long_t nElements, void *p) {
      return p ? new(p) ::AngularRT_noS[nElements] : new ::AngularRT_noS[nElements];
   }
   // Wrapper around operator delete
   static void delete_AngularRT_noS(void *p) {
      delete ((::AngularRT_noS*)p);
   }
   static void deleteArray_AngularRT_noS(void *p) {
      delete [] ((::AngularRT_noS*)p);
   }
   static void destruct_AngularRT_noS(void *p) {
      typedef ::AngularRT_noS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AngularRT_noS(TBuffer &buf, void *obj) {
      ((::AngularRT_noS*)obj)->::AngularRT_noS::Streamer(buf);
   }
} // end of namespace ROOT for class ::AngularRT_noS

//______________________________________________________________________________
void AngularWT_noS::Streamer(TBuffer &R__b)
{
   // Stream an object of class AngularWT_noS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AngularWT_noS::IsA());
   } else {
      R__c = R__b.WriteVersion(AngularWT_noS::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      ctK.Streamer(R__b);
      ctL.Streamer(R__b);
      phi.Streamer(R__b);
      FlS.Streamer(R__b);
      P1S.Streamer(R__b);
      P5pS.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AngularWT_noS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AngularWT_noS.
      TClass *R__cl = ::AngularWT_noS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctK", &ctK);
      R__insp.InspectMember(ctK, "ctK.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctL", &ctL);
      R__insp.InspectMember(ctL, "ctL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FlS", &FlS);
      R__insp.InspectMember(FlS, "FlS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P1S", &P1S);
      R__insp.InspectMember(P1S, "P1S.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P5pS", &P5pS);
      R__insp.InspectMember(P5pS, "P5pS.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AngularWT_noS(void *p) {
      return  p ? new(p) ::AngularWT_noS : new ::AngularWT_noS;
   }
   static void *newArray_AngularWT_noS(Long_t nElements, void *p) {
      return p ? new(p) ::AngularWT_noS[nElements] : new ::AngularWT_noS[nElements];
   }
   // Wrapper around operator delete
   static void delete_AngularWT_noS(void *p) {
      delete ((::AngularWT_noS*)p);
   }
   static void deleteArray_AngularWT_noS(void *p) {
      delete [] ((::AngularWT_noS*)p);
   }
   static void destruct_AngularWT_noS(void *p) {
      typedef ::AngularWT_noS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AngularWT_noS(TBuffer &buf, void *obj) {
      ((::AngularWT_noS*)obj)->::AngularWT_noS::Streamer(buf);
   }
} // end of namespace ROOT for class ::AngularWT_noS

/********************************************************
* AngularDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAngularDict();

extern "C" void G__set_cpp_environmentAngularDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../interface/AngularRT.h");
  G__add_compiledheader("../interface/AngularWT.h");
  G__add_compiledheader("../interface/AngularRT_noS.h");
  G__add_compiledheader("../interface/AngularWT_noS.h");
  G__cpp_reset_tagtableAngularDict();
}
#include <new>
extern "C" int G__cpp_dllrevAngularDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AngularRT */
static int G__AngularDict_800_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularRT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT[n];
     } else {
       p = new((void*) gvp) AngularRT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT;
     } else {
       p = new((void*) gvp) AngularRT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularRT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularRT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AngularRT(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref);
   } else {
     p = new((void*) gvp) AngularRT(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularRT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularRT* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT(*(AngularRT*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AngularRT(*(AngularRT*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT(*(AngularRT*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) AngularRT(*(AngularRT*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularRT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AngularRT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularRT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AngularRT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AngularRT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngularRT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularRT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularRT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularRT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_800_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularRT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AngularRT G__TAngularRT;
static int G__AngularDict_800_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AngularRT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AngularRT*) (soff+(sizeof(AngularRT)*i)))->~G__TAngularRT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AngularRT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AngularRT*) (soff))->~G__TAngularRT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AngularWT */
static int G__AngularDict_801_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularWT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT[n];
     } else {
       p = new((void*) gvp) AngularWT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT;
     } else {
       p = new((void*) gvp) AngularWT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularWT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularWT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AngularWT(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref);
   } else {
     p = new((void*) gvp) AngularWT(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularWT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularWT* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT(*(AngularWT*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AngularWT(*(AngularWT*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT(*(AngularWT*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) AngularWT(*(AngularWT*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularWT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AngularWT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularWT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AngularWT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AngularWT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngularWT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularWT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularWT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularWT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_801_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularWT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AngularWT G__TAngularWT;
static int G__AngularDict_801_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AngularWT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AngularWT*) (soff+(sizeof(AngularWT)*i)))->~G__TAngularWT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AngularWT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AngularWT*) (soff))->~G__TAngularWT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AngularRT_noS */
static int G__AngularDict_802_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularRT_noS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT_noS[n];
     } else {
       p = new((void*) gvp) AngularRT_noS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT_noS;
     } else {
       p = new((void*) gvp) AngularRT_noS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularRT_noS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AngularRT_noS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref);
   } else {
     p = new((void*) gvp) AngularRT_noS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularRT_noS* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT_noS(*(AngularRT_noS*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AngularRT_noS(*(AngularRT_noS*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularRT_noS(*(AngularRT_noS*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) AngularRT_noS(*(AngularRT_noS*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AngularRT_noS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularRT_noS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AngularRT_noS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AngularRT_noS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngularRT_noS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularRT_noS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularRT_noS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularRT_noS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_802_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularRT_noS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AngularRT_noS G__TAngularRT_noS;
static int G__AngularDict_802_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AngularRT_noS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AngularRT_noS*) (soff+(sizeof(AngularRT_noS)*i)))->~G__TAngularRT_noS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AngularRT_noS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AngularRT_noS*) (soff))->~G__TAngularRT_noS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AngularWT_noS */
static int G__AngularDict_803_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularWT_noS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT_noS[n];
     } else {
       p = new((void*) gvp) AngularWT_noS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT_noS;
     } else {
       p = new((void*) gvp) AngularWT_noS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularWT_noS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AngularWT_noS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref);
   } else {
     p = new((void*) gvp) AngularWT_noS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngularWT_noS* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT_noS(*(AngularWT_noS*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AngularWT_noS(*(AngularWT_noS*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngularWT_noS(*(AngularWT_noS*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) AngularWT_noS(*(AngularWT_noS*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AngularWT_noS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularWT_noS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AngularWT_noS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AngularWT_noS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngularWT_noS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularWT_noS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularWT_noS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngularWT_noS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AngularDict_803_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngularWT_noS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AngularWT_noS G__TAngularWT_noS;
static int G__AngularDict_803_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AngularWT_noS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AngularWT_noS*) (soff+(sizeof(AngularWT_noS)*i)))->~G__TAngularWT_noS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AngularWT_noS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AngularWT_noS*) (soff))->~G__TAngularWT_noS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AngularRT */

/* AngularWT */

/* AngularRT_noS */

/* AngularWT_noS */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAngularDict {
 public:
  G__Sizep2memfuncAngularDict(): p(&G__Sizep2memfuncAngularDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAngularDict::*p)();
};

size_t G__get_sizep2memfuncAngularDict()
{
  G__Sizep2memfuncAngularDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAngularDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AngularDictLN_AngularRT))) {
     AngularRT *G__Lderived;
     G__Lderived=(AngularRT*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT),G__get_linked_tagnum(&G__AngularDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT),G__get_linked_tagnum(&G__AngularDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT),G__get_linked_tagnum(&G__AngularDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT),G__get_linked_tagnum(&G__AngularDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT),G__get_linked_tagnum(&G__AngularDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT),G__get_linked_tagnum(&G__AngularDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AngularDictLN_AngularWT))) {
     AngularWT *G__Lderived;
     G__Lderived=(AngularWT*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT),G__get_linked_tagnum(&G__AngularDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT),G__get_linked_tagnum(&G__AngularDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT),G__get_linked_tagnum(&G__AngularDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT),G__get_linked_tagnum(&G__AngularDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT),G__get_linked_tagnum(&G__AngularDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT),G__get_linked_tagnum(&G__AngularDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS))) {
     AngularRT_noS *G__Lderived;
     G__Lderived=(AngularRT_noS*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS),G__get_linked_tagnum(&G__AngularDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS),G__get_linked_tagnum(&G__AngularDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS))) {
     AngularWT_noS *G__Lderived;
     G__Lderived=(AngularWT_noS*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS),G__get_linked_tagnum(&G__AngularDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS),G__get_linked_tagnum(&G__AngularDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS),G__get_linked_tagnum(&G__AngularDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAngularDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,RooLinkedListElem*>",117,G__get_linked_tagnum(&G__AngularDictLN_pairlEintcORooLinkedListElemmUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::pair<Int_t,RooLinkedListElem*> >",117,G__get_linked_tagnum(&G__AngularDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<int,RooLinkedListElem*> >",117,G__get_linked_tagnum(&G__AngularDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__AngularDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__AngularDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__AngularDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> > >",117,G__get_linked_tagnum(&G__AngularDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsCache*>",117,G__get_linked_tagnum(&G__AngularDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AngularDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AngularDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__AngularDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooCurve*>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Double_t>",117,G__get_linked_tagnum(&G__AngularDictLN_listlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataHist*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataSet*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsData*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<EvalError>",117,G__get_linked_tagnum(&G__AngularDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsReal::EvalError>",117,G__get_linked_tagnum(&G__AngularDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__AngularDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StreamConfig>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooMsgService::StreamConfig>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__AngularDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<std::vector<StreamConfig> >",117,G__get_linked_tagnum(&G__AngularDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__AngularDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::ostream*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*>",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*,less<string> >",117,G__get_linked_tagnum(&G__AngularDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooNormSetCache>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooAbsCacheElement*>",117,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AngularDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AngularDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AngularRT */
static void G__setup_memvarAngularRT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT));
   { AngularRT *p; p=(AngularRT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctK=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"FsS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"AsS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"As5S=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"FlS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P1S=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P5pS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AngularDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AngularWT */
static void G__setup_memvarAngularWT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT));
   { AngularWT *p; p=(AngularWT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctK=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"FsS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"AsS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"As5S=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"FlS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P1S=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P5pS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AngularDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AngularRT_noS */
static void G__setup_memvarAngularRT_noS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS));
   { AngularRT_noS *p; p=(AngularRT_noS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctK=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"FlS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P1S=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P5pS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AngularDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AngularWT_noS */
static void G__setup_memvarAngularWT_noS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS));
   { AngularWT_noS *p; p=(AngularWT_noS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctK=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"ctL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"FlS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P1S=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AngularDictLN_RooRealProxy),-1,-1,2,"P5pS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AngularDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAngularDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAngularRT(void) {
   /* AngularRT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT));
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AngularRT",880,G__AngularDict_800_0_2, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularRT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularRT",880,G__AngularDict_800_0_3, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularRT), -1, 0, 11, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _ctK u 'RooAbsReal' - 1 - _ctL "
"u 'RooAbsReal' - 1 - _phi u 'RooAbsReal' - 1 - _FsS "
"u 'RooAbsReal' - 1 - _AsS u 'RooAbsReal' - 1 - _As5S "
"u 'RooAbsReal' - 1 - _FlS u 'RooAbsReal' - 1 - _P1S "
"u 'RooAbsReal' - 1 - _P5pS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularRT",880,G__AngularDict_800_0_4, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularRT), -1, 0, 2, 1, 1, 0, 
"u 'AngularRT' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AngularDict_800_0_6, 85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AngularRT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AngularDict_800_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularRT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AngularDict_800_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AngularRT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AngularDict_800_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AngularRT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AngularDict_800_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AngularDict_800_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularRT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AngularDict_800_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularRT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AngularDict_800_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularRT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AngularDict_800_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularRT::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AngularRT", 1006, G__AngularDict_800_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAngularWT(void) {
   /* AngularWT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT));
   G__memfunc_setup("AngularWT",885,G__AngularDict_801_0_1, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularWT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularWT",885,G__AngularDict_801_0_2, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularWT), -1, 0, 11, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _ctK u 'RooAbsReal' - 1 - _ctL "
"u 'RooAbsReal' - 1 - _phi u 'RooAbsReal' - 1 - _FsS "
"u 'RooAbsReal' - 1 - _AsS u 'RooAbsReal' - 1 - _As5S "
"u 'RooAbsReal' - 1 - _FlS u 'RooAbsReal' - 1 - _P1S "
"u 'RooAbsReal' - 1 - _P5pS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularWT",885,G__AngularDict_801_0_3, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularWT), -1, 0, 2, 1, 1, 0, 
"u 'AngularWT' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AngularDict_801_0_6, 85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AngularWT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AngularDict_801_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularWT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AngularDict_801_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AngularWT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AngularDict_801_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AngularWT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AngularDict_801_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AngularDict_801_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularWT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AngularDict_801_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularWT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AngularDict_801_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularWT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AngularDict_801_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularWT::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AngularWT", 1011, G__AngularDict_801_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAngularRT_noS(void) {
   /* AngularRT_noS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS));
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AngularRT_noS",1279,G__AngularDict_802_0_2, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularRT_noS",1279,G__AngularDict_802_0_3, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _ctK u 'RooAbsReal' - 1 - _ctL "
"u 'RooAbsReal' - 1 - _phi u 'RooAbsReal' - 1 - _FlS "
"u 'RooAbsReal' - 1 - _P1S u 'RooAbsReal' - 1 - _P5pS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularRT_noS",1279,G__AngularDict_802_0_4, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularRT_noS), -1, 0, 2, 1, 1, 0, 
"u 'AngularRT_noS' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AngularDict_802_0_6, 85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AngularRT_noS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AngularDict_802_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularRT_noS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AngularDict_802_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AngularRT_noS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AngularDict_802_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AngularRT_noS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AngularDict_802_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AngularDict_802_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularRT_noS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AngularDict_802_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularRT_noS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AngularDict_802_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularRT_noS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AngularDict_802_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularRT_noS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AngularRT_noS", 1405, G__AngularDict_802_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAngularWT_noS(void) {
   /* AngularWT_noS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS));
   G__memfunc_setup("AngularWT_noS",1284,G__AngularDict_803_0_1, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularWT_noS",1284,G__AngularDict_803_0_2, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _ctK u 'RooAbsReal' - 1 - _ctL "
"u 'RooAbsReal' - 1 - _phi u 'RooAbsReal' - 1 - _FlS "
"u 'RooAbsReal' - 1 - _P1S u 'RooAbsReal' - 1 - _P5pS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngularWT_noS",1284,G__AngularDict_803_0_3, 105, G__get_linked_tagnum(&G__AngularDictLN_AngularWT_noS), -1, 0, 2, 1, 1, 0, 
"u 'AngularWT_noS' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AngularDict_803_0_6, 85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AngularWT_noS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AngularDict_803_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularWT_noS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AngularDict_803_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AngularWT_noS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AngularDict_803_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AngularWT_noS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AngularDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AngularDict_803_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AngularDict_803_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularWT_noS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AngularDict_803_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularWT_noS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AngularDict_803_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngularWT_noS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AngularDict_803_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngularWT_noS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AngularWT_noS", 1410, G__AngularDict_803_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAngularDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAngularDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAngularDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AngularDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AngularDictLN_RooPrintable = { "RooPrintable" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_RooAbsArg = { "RooAbsArg" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_listlEdoublecOallocatorlEdoublegRsPgR = { "list<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_pairlEintcORooLinkedListElemmUgR = { "pair<int,RooLinkedListElem*>" , 115 , -1 };
G__linked_taginfo G__AngularDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR = { "list<pair<int,RooLinkedListElem*>,allocator<pair<int,RooLinkedListElem*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_RooRealProxy = { "RooRealProxy" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR = { "set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> >,allocator<pair<RooAbsArg*,RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_RooAbsReal = { "RooAbsReal" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR = { "deque<RooAbsCache*,allocator<RooAbsCache*> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR = { "vector<RooCurve*,allocator<RooCurve*> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooCurve*,allocator<RooCurve*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_RooAbsPdf = { "RooAbsPdf" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR = { "map<string,RooDataHist*,less<string>,allocator<pair<const string,RooDataHist*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR = { "map<string,RooDataSet*,less<string>,allocator<pair<const string,RooDataSet*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR = { "map<string,RooAbsData*,less<string>,allocator<pair<const string,RooAbsData*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR = { "list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR = { "pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >" , 115 , -1 };
G__linked_taginfo G__AngularDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > > > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR = { "vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR = { "deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR = { "stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR = { "map<string,basic_ostream<char,char_traits<char> >*,less<string>,allocator<pair<const string,basic_ostream<char,char_traits<char> >*> > >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR = { "vector<RooNormSetCache,allocator<RooNormSetCache> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooNormSetCache,allocator<RooNormSetCache> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR = { "vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_AngularRT = { "AngularRT" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_AngularWT = { "AngularWT" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_AngularRT_noS = { "AngularRT_noS" , 99 , -1 };
G__linked_taginfo G__AngularDictLN_AngularWT_noS = { "AngularWT_noS" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAngularDict() {
  G__AngularDictLN_TClass.tagnum = -1 ;
  G__AngularDictLN_TBuffer.tagnum = -1 ;
  G__AngularDictLN_TMemberInspector.tagnum = -1 ;
  G__AngularDictLN_TObject.tagnum = -1 ;
  G__AngularDictLN_TNamed.tagnum = -1 ;
  G__AngularDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AngularDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AngularDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AngularDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AngularDictLN_RooPrintable.tagnum = -1 ;
  G__AngularDictLN_RooAbsArg.tagnum = -1 ;
  G__AngularDictLN_listlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__AngularDictLN_pairlEintcORooLinkedListElemmUgR.tagnum = -1 ;
  G__AngularDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_RooRealProxy.tagnum = -1 ;
  G__AngularDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_RooAbsReal.tagnum = -1 ;
  G__AngularDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR.tagnum = -1 ;
  G__AngularDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AngularDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AngularDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__AngularDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR.tagnum = -1 ;
  G__AngularDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AngularDictLN_RooAbsPdf.tagnum = -1 ;
  G__AngularDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR.tagnum = -1 ;
  G__AngularDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR.tagnum = -1 ;
  G__AngularDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AngularDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__AngularDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR.tagnum = -1 ;
  G__AngularDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AngularDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR.tagnum = -1 ;
  G__AngularDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AngularDictLN_AngularRT.tagnum = -1 ;
  G__AngularDictLN_AngularWT.tagnum = -1 ;
  G__AngularDictLN_AngularRT_noS.tagnum = -1 ;
  G__AngularDictLN_AngularWT_noS.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAngularDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_RooPrintable);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_RooAbsArg);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_listlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_pairlEintcORooLinkedListElemmUgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_RooRealProxy);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_RooAbsReal);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_RooAbsPdf);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AngularDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AngularDictLN_AngularRT),sizeof(AngularRT),-1,63232,"PDF for angular decay rate description",G__setup_memvarAngularRT,G__setup_memfuncAngularRT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AngularDictLN_AngularWT),sizeof(AngularWT),-1,63232,"Your description goes here...",G__setup_memvarAngularWT,G__setup_memfuncAngularWT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AngularDictLN_AngularRT_noS),sizeof(AngularRT_noS),-1,63232,"PDF for angular decay rate description",G__setup_memvarAngularRT_noS,G__setup_memfuncAngularRT_noS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AngularDictLN_AngularWT_noS),sizeof(AngularWT_noS),-1,63232,"Your description goes here...",G__setup_memvarAngularWT_noS,G__setup_memfuncAngularWT_noS);
}
extern "C" void G__cpp_setupAngularDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAngularDict()");
  G__set_cpp_environmentAngularDict();
  G__cpp_setup_tagtableAngularDict();

  G__cpp_setup_inheritanceAngularDict();

  G__cpp_setup_typetableAngularDict();

  G__cpp_setup_memvarAngularDict();

  G__cpp_setup_memfuncAngularDict();
  G__cpp_setup_globalAngularDict();
  G__cpp_setup_funcAngularDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAngularDict();
  return;
}
class G__cpp_setup_initAngularDict {
  public:
    G__cpp_setup_initAngularDict() { G__add_setup_func("AngularDict",(G__incsetup)(&G__cpp_setupAngularDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAngularDict() { G__remove_setup_func("AngularDict"); }
};
G__cpp_setup_initAngularDict G__cpp_setup_initializerAngularDict;

